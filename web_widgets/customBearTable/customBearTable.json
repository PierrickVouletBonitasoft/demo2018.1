{"designerVersion":"1.2.9","id":"customBearTable","name":"BearTable","lastUpdate":1499807802915,"template":"<!-- The custom widget template is defined here\r\n   - You can use standard HTML tags and AngularJS built-in directives, scope and interpolation system\r\n   - Custom widget properties defined on the right can be used as variables in a templates with properties.newProperty\r\n   - Functions exposed in the controller can be used with ctrl.newFunction()\r\n -->\r\n\r\n<div ng-show=\"environment.editor.pageId!=null\">BearTable {{properties.Label}}</div>\r\n<table class=\"{{ctrl.getTableCss()}}\" syle=\"{{ctrl.getStyleCss()}}\">\t\t\t\t\t\r\n    <tr>\r\n\t    <th ng-repeat=\"header in ctrl.getHeader() track by $index\" style=\"{{ctrl.getStyleHeader( header );}}\">\r\n\t        {{header.title}}\r\n\t            <a ng-show=\"header.order == true\" href=\"#\" ng-click=\"ctrl.setOrder( header.name, ! ctrl.isReverseSort());\" style=\"text-decoration:none\">\r\n\t\t\t\t\t<span ng-show=\"ctrl.getOrderByField() != header.name\" class=\"glyphicon glyphicon-chevron-minus\">-</span>\r\n\t\t\t\t\t<span ng-show=\"ctrl.getOrderByField() === header.name && ctrl.isReverseSort()\" class=\"glyphicon glyphicon-chevron-down\"></span>\r\n\t\t\t\t\t<span ng-show=\"ctrl.getOrderByField() === header.name && ! ctrl.isReverseSort() \" class=\"glyphicon glyphicon-chevron-up\"></span>\r\n\t\t\t\t</a>\r\n\t\t    <div ng-show=\"header.filter==true\" >\r\n\t\t\t    <br>\r\n\t\t\t    <input type=\"text\" ng-model=\"ctrl.filterrecord[header.name]\" size=\"15\" \r\n\t\t\t    class=\"form-control filter-control\"\r\n\t\t\t\ttitle=\"Filter: only lines which contains this value are shown\"/>\r\n\t\t    </div>\r\n\t    </th>\r\n    </tr>\r\n    <tbody  ng-repeat=\"oneRecord in ctrl.getRecordsPage() track by $index\">\r\n\t<tr \tng-show=\"! ctrl.getActionHideLine( oneRecord )\" >\r\n\t   \t<td ng-repeat=\"header in ctrl.getHeader( oneRecord ) track by $index\" style=\"{{ctrl.getActionStyleCell(header, oneRecord)}}\">\r\n\t\t    <div ng-show=\"header.control === 'link'\">\r\n\t\t        <a href=\"oneRecord[ header.name ]\" title=\"{{header.tips}}\">{{header.title}}</a>\r\n\t\t    </div>\r\n\t\t    <div ng-show=\"header.control === 'button'\">\r\n\t\t        <button ng-click=\"oneRecord[ header.name ]\" title=\"{{header.tips}}\">Click</button>\r\n\t\t    </div>\r\n\t\t    \r\n\t\t\t<div ng-show=\"header.control === 'select'\">\r\n\t\t\t    <!-- ng-init=\"oneRecord[ header.name + '_select'] = ctrl.getWSelectGetSelected(header, oneRecord )\" -->\r\n\t\t    \t<select ng-model=\"oneRecord[  header.name+'_select' ]\" \r\n\t\t\t            ng-options=\"ctrl.getWSelectDisplayFromItem(header, item) for item in ctrl.getWSelectListOptionsItem(header)\"\r\n\t\t\t            ng-change=\"oneRecord[ header.name ]= ctrl.getWSelectItemToKey(header, oneRecord[ header.name+'_select' ]);ctrl.checkRules()\"\r\n\t\t\t            ng-disabled=\"ctrl.getActionReadOnly(header, oneRecord );\"\r\n\t\t\t            style=\"display:block;width=100%;height:26px;\"\r\n\t\t\t             title=\"{{header.tips}}\">\r\n\t\t    \t</select>\r\n\t\t    </div>\r\n\t\t\t<div ng-show=\"header.control === 'input'\">\r\n\t\t    \t<input ng-model=\"oneRecord[ header.name ]\" size=\"{{header.size}}\"  ng-change=\"ctrl.checkRules()\"\r\n\t\t    \tng-disabled=\"ctrl.getActionReadOnly(header, oneRecord);\" title=\"{{header.tips}}\"/>\r\n\t\t    </div>\r\n\t\t\t<div ng-show=\"header.control === 'text'\">\r\n\t\t    \t{{oneRecord[  header.name ] }}\r\n\t\t    </div>\r\n\t\t    <div ng-show=\"header.control === 'number'\">\r\n\t\t    \t<input ng-model=\"oneRecord[  header.name ]\" style=\"width: {{header.size}}px\" type=\"number\" ng-change=\"ctrl.checkRules()\"\r\n\t\t    \t ng-disabled=\"ctrl.getActionReadOnly(header, oneRecord);\" title=\"{{header.tips}}\"/>\r\n\t\t    </div>\r\n\t\t    <div ng-show=\"header.control === 'password'\">\r\n\t\t    \t<input ng-model=\"oneRecord[  header.name ]\" size=\"{{header.size}}\" type=\"password\"\r\n\t\t    \t ng-disabled=\"ctrl.getActionReadOnly(header, oneRecord);\" title=\"{{header.tips}}\"/>\r\n\t\t    </div>\r\n            \t<div ng-show=\"header.control === 'email'\">\r\n\t\t    \t<input ng-model=\"oneRecord[  header.name ]\" size=\"{{header.size}}\" type=\"email\"  ng-change=\"ctrl.checkRules()\"\r\n\t\t    \t ng-disabled=\"ctrl.getActionReadOnly(header, oneRecord);\" title=\"{{header.tips}}\"/>\r\n\t\t    </div>\r\n            <div ng-show=\"header.control === 'date'\">\r\n\t\t    \t<input ng-model=\"oneRecord[ header.name ]\" size=\"{{header.size}}\" type=\"date\" \r\n\t\t    \t ng-disabled=\"ctrl.getActionReadOnly(header, oneRecord);\" title=\"{{header.tips}}\"/>\r\n\t\t    </div>\r\n\t\t     <div ng-show=\"header.control === 'datelong'\">\r\n\t\t    \t<input ng-model=\"oneRecord[ header.name +'_date' ]\" size=\"{{header.size}}\" type=\"date\" \r\n\t\t    \t      value=\"{{ctrl.getWSelectDateLongInitValue(header, oneRecord[ header.name ])}}\"\r\n\t\t    \t      ng-change=\"oneRecord[ header.name ]= ctrl.getWSelectDateLongFromDate(header, oneRecord[ header.name+'_date' ]);ctrl.checkRules()\"\r\n\t\t\t          ng-disabled=\"ctrl.getActionReadOnly(header, oneRecord);\"  title=\"{{header.tips}}\"/>\r\n\t\t    </div>\r\n\t\t     <div ng-show=\"header.control === 'datetime'\">\r\n\t\t    \t<input ng-model=\"oneRecord[  header.name ]\" size=\"{{header.size}}\" type=\"datetime\"\r\n\t\t    \t ng-disabled=\"ctrl.getActionReadOnly(header, oneRecord);\" title=\"{{header.tips}}\"/>\r\n\t\t    </div>\r\n\t\t     <div ng-show=\"header.control === 'time'\">\r\n\t\t    \t<input ng-model=\"oneRecord[  header.name ]\" size=\"{{header.size}}\" type=\"time\"\r\n\t\t    \t ng-disabled=\"ctrl.getActionReadOnly(header, oneRecord);\" title=\"{{header.tips}}\"/>\r\n\t\t    </div>\r\n\t\t     <div ng-show=\"header.control === 'hour'\">\r\n\t\t    \t<input ng-model=\"oneRecord[  header.name ]\" size=\"{{header.size}}\" type=\"hour\"\r\n\t\t    \t ng-disabled=\"ctrl.getActionReadOnly(header, oneRecord);\" title=\"{{header.tips}}\"/>\r\n\t\t    </div>\r\n\t\t\t <div ng-show=\"header.control === 'checkbox'\">\r\n\t\t    \t<input ng-model=\"oneRecord[ header.name ]\" size=\"{{header.size}}\" type=\"checkbox\"\r\n\t\t    \t ng-disabled=\"ctrl.getActionReadOnly(header, oneRecord);\" title=\"{{header.tips}}\"/>\r\n\t\t    </div>\r\n\t\t     <div ng-show=\"header.control === 'children'\">\r\n\t\t    \t<input ng-model=\"oneRecord[  header.name+'_bearwidget' ]\" size=\"{{header.size}}\" type=\"checkbox\"\r\n\t\t    \t ng-disabled=\"ctrl.getActionReadOnly(header, oneRecord);\" title=\"{{header.tips}}\"/>\r\n\t\t    </div>\r\n\t\t    <div ng-show=\"header.control === 'contentjson'\">\r\n\t\t    \t{{oneRecord}}\r\n\t\t    </div>\r\n\t\t    <div ng-show=\"header.control === 'piechart'\">\r\n\t\t        <canvas id=\"pie\" class=\"chart chart-pie\" chart-data=\"ctrl.getListPieData( header )\" chart-labels=\"ctrl.getListPieHeader( header )\" legend=\"true\"></canvas>\r\n\t\t        Pie-Data {{ctrl.getListPieData( header )}} Pie-label:{{ctrl.getListPieHeader( header )}}\r\n\t\t    </div>\r\n\t\t</td>\t\t\r\n\t\t\r\n\t    <!-- <td>Control={{ctrl.getHeader()}}<br>OneRecord={{onerecord}}</td> -->\r\n\t\t\t\t\t\r\n\t</tr>\t\t\r\n\t</tbody>\r\n</table>\r\n\r\n<span class=\"label label-danger\">{{ctrl.getErrorMessage()}}</span>\r\n\r\n<!-- Total number : {{ctrl.getRecordsNumber()}} / {{ctrl.getRecordsFilterNumber()}} -->\r\n\r\n<div ng-show=\"ctrl.isShowDebug()\">\r\n    Debug Content:{{ctrl.getContent()}}\r\n</div>\r\n<div ng-show=\"ctrl.isShowPagination()\">\r\n\r\n\t    \r\n\t\t<select ng-model=\"ctrl.recorditemsperpage\" ng-show=\"false\" >\r\n\t\t    <option ng-repeat=\"item in ctrl.getStepPagination()\" value=\"{{item.value}}\">{{item.name}}</option>\r\n\t\t</select>\r\n\t\t\r\n\t\t<!-- PageNumber={{ctrl.recordpagenumber}} total-items={{ctrl.getRecordsFilterNumber()}} item/page {{ctrl.getRecordsItemPerPage()}} -->\r\n\t\t<!-- we should branch getRecordsFilterNumber() but it's not working... -->\r\n\t\t<pagination ng-show=\"false\" ng-model=\"ctrl.recordpagenumber\" total-items=\"ctrl.getRecordsNumber()\" items-per-page=\"ctrl.recorditemsperpage\">\r\n\t\t</pagination>\r\n</div>\r\n\r\n\r\n\r\n\t","controller":"/**\r\n * The controller is a JavaScript function that augments the AngularJS scope and exposes functions that can be used in the custom widget template\r\n * \r\n * Custom widget properties defined on the right can be used as variables in a controller with $scope.properties\r\n * To use AngularJS standard services, you must declare them in the main function arguments.\r\n * \r\n * You can leave the controller empty if you do not need it.\r\n */\r\nfunction ($scope, $filter) {\r\n\r\n    var ctrl=this;\r\n    \r\n    \r\n    this.myListOptions = [{key:\"IE\",            display:\"Internet\"},\r\n                {key:\"CHROME\",           display:\"Chrome\" },\r\n                {key:\"FIREFOX\",          display:\"Firefox\" }];\r\n    this.choosenValue_select= this.myListOptions[2];\r\n    this.getTestListSelect = function() { \r\n        return this.myListOptions; };\r\n        \r\n    this.getTestListDisplay = function() { \r\n        var listDisplay=[];\r\n        for (var i=0;i<this.myListOptions.length;i++) {\r\n            listDisplay.push( this.myListOptions[ i ].display);\r\n        }\r\n        return listDisplay; \r\n        \r\n    };\r\n    this.getTestDisplay = function( item )\r\n    {\r\n        return item.display;\r\n    }\r\n\t\r\n     //---------\r\n\t// Return the InitValue\r\n\tthis.getWSelectDateLongInitValue = function(header, valueDate) {\r\n\t  if (valueDate==null)\r\n\t\treturn null;\r\n\t\t// return true if value is not a number\r\n\t  if (isNaN(valueDate) && isFinite(valueDate))\r\n\t\treturn null;\r\n\t\t\r\n\t  // console.log( \"getWSelectDateLongInitValue: valueDate[\"+JSON.stringify(valueDate)+\"]\");\r\n\t  var dateObject = new Date( valueDate );\r\n\t  \r\n\t  // console.log( \"getWSelectDateLongInitValue: valueDate[\"+valueDate+\"] dateLong[\"+dateObject.getTime()+\"]\");\r\n\t  return dateObject.toISOString().substring(0, 10);\r\n\t}\r\n\t\r\n\t//---------\r\n\t// User select a date, then calculate the new DateLong from the date\r\n\t// input : \"2016-03-30T07:00:00.000Z\" => Produce 1459321200000\r\n\tthis.getWSelectDateLongFromDate = function(header, valueDate) {\r\n\t  var dateObject = new Date( valueDate );\r\n\t  // console.log( \"selectDateLongFromDate: valueDate[\"+valueDate+\"] dateLong[\"+dateObject.getTime()+\"]\");\r\n\t  \r\n\t  return dateObject.getTime();\r\n\t}\r\n\t\r\n\t//--------- widget SELECT : for one OptionItem (ex {key:\"FR\", display:\"France\"}, according header.listoptiondisplay == \"display\", return \"France\"\r\n\tthis.getWSelectDisplayFromItem = function ( header, optionItem ) {\r\n\t    if (header.control === 'select')\r\n\t    {\r\n\t        // console.log(\"getWSelectDisplayFromItem= \"+ JSON.stringify( optionItem ));\r\n\r\n            if (header.listoptiondisplay===null)\r\n            {\r\n    \t        // console.log(\" -defaultdisplay:\"+optionItem.display+\")\");\r\n\t            return optionItem.display;\r\n            }\r\n\t        return optionItem[ header.listoptiondisplay ];\r\n\t    }\r\n\t    return null;\r\n\t}\r\n\t\r\n\t// --------------------------------------------------\r\n    // ------------------ Check\r\n    // --------------------------------------------------\r\n\r\n    this.errorMessage=\"\";\r\n    this.checkRules = function() {\r\n        // console.log(\"~~~~~~~~~~~~~~~~~~ CheckRules\");\r\n        // console.log(\"checkRules : value=\"+$scope.properties.value );\r\n\t    if (($scope.properties.value === null) || (typeof $scope.properties.value === 'undefined')) {\r\n\t\t\t// console.log(\"~~~~~~~~~~~~~~~~~~ CheckRules: no data\");\r\n\t\t\treturn null;\r\n\t\t}\r\n        this.errorMessage=\"\";\r\n        if ($scope.properties.checkrules === null) {\r\n            // console.log(\"~~~~~~~~~~~~~~~~~~ CheckRules:No rules defines\");\r\n            return;\r\n        }\r\n        for (var i=0;i<$scope.properties.checkrules.length;i++) {\r\n            var rule = $scope.properties.checkrules[ i ];\r\n            // console.log(\"~~~~~~~~~~~~~~~~~~ CheckRules:rule \"+rule.rule);\r\n              \r\n            if (rule.rule == 'sumcol') {\r\n                var totalCol = 0;\r\n                // console.log(\"~~~~~~~~~~~~~~~~~~ CheckRules:SumCol\");\r\n                if (rule.totalsum === null) {\r\n                    this.errorMessage = this.errorMessage+ \"rule \"+rule.name+\" the properties[totalsum] is not defined;\"\r\n                }\r\n                if (rule.colname === null) {\r\n                    this.errorMessage = this.errorMessage+ \"rule \"+rule.name+\" the properties[colname] is not defined;\"\r\n                }\r\n                // now do the job\r\n                if ($scope.properties.value === null) {\r\n                    // console.log(\"~~~~~~~~~~~~~~~~~~ CheckRules:NoData\");\r\n                } else {\r\n                    for (var j=0; j<$scope.properties.value.length; j++){\r\n    \t                var oneRow = $scope.properties.value[ j ];\r\n    \t                var valueRow = oneRow[ rule.colname ];\r\n    \t                // console.log(\"OneRow.value = \"+valueRow);\r\n    \t                if (valueRow!==null) {\r\n    \t                    totalCol = totalCol + valueRow;\r\n    \t                }\r\n                    }\r\n                }\r\n                // console.log(\"compare \"+totalCol+\" and \"+rule.totalsum);\r\n                if (totalCol !== rule.totalsum) {\r\n                    this.errorMessage = this.errorMessage+ rule.message+\" : \"+totalCol+\";\"\r\n                }\r\n            \r\n            } else if (rule.rule == 'uniquecol') {\r\n                 if (rule.colname === null) {\r\n                    this.errorMessage = this.errorMessage+ \"rule \"+rule.name+\" the properties[colname] is not defined;\"\r\n                }\r\n                // now do the job\r\n                if ($scope.properties.value === null) {\r\n                    // console.log(\"~~~~~~~~~~~~~~~~~~ CheckRules:NoData\");\r\n                } else {\r\n                    var message=\"\";\r\n                    for (var j2=0; j2<$scope.properties.value.length; j2++){\r\n    \t                var oneRow2 = $scope.properties.value[ j2 ];\r\n    \t                var valueRow2 = oneRow2[ rule.colname ];\r\n    \t                // console.log(\"OneRow.value = \"+valueRow);\r\n    \t                for (var k=j2+1; k<$scope.properties.value.length; k++){\r\n    \t                    var oneNextRow = $scope.properties.value[ k ];\r\n    \t                    var valueNextRow = oneNextRow[ rule.colname ];\r\n                            if (valueRow2 === valueNextRow) {\r\n                                message = message +\" : line \"+(j+1)+\"[\"+valueRow2+\"] and \"+(k+1)+\"[\"+valueNextRow+\"];\"\r\n                            }\r\n    \t                }\r\n                    }\r\n                    if (message!==\"\") {\r\n                        this.errorMessage = this.errorMessage+ rule.message+\" \"+message+\" are identical\";\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n              this.errorMessage = this.errorMessage+ \"Unknow rule [\"+rule.rule+\"];\";\r\n            }\r\n        }\r\n        // console.log(\"~~~~~~~~~~~~~~~~~~~ Rule message: \"+this.errorMessage);\r\n    }\r\n    \r\n    this.getErrorMessage = function () {\r\n         console.log(\"Get Error message: \"+this.errorMessage);\r\n        return this.errorMessage;\r\n    }\r\n    \r\n    \r\n  \r\n        \r\n    // add a new variable in AngularJS scope. It'll be usable in the template directly with {{ backgroundColor }} \r\n    this.filterrecord={};\r\n    this.reverseSort=false;\r\n    this.orderByField=\"\";\r\n    // this then the HTML can directly modify this value\r\n    this.recordpagenumber=1;\r\n\tthis.recorditemsperpage= 1000;\r\n\t\r\n\t// --------------------------------------------------\r\n    //------------------ Action rules\r\n    // --------------------------------------------------\r\n    this.defaultSort = function () \r\n    {\r\n        // console.log(\"--------------- DefaultSort?\");\r\n        if ($scope.properties.actionsRules !== null)\r\n        {\r\n            for (var i=0;i<$scope.properties.actionsRules.length;i++) {\r\n                var actionRule = $scope.properties.actionsRules[ i ];\r\n                // console.log(\"--------------- Sort:actionrule.action=\"+actionRule.action);\r\n                if (actionRule.action === 'sort') {\r\n                    \r\n                    // console.log(\">>>>>>>>>>>>>>>>>>>>>>>>>>>> Sort ! \");\r\n                     $scope.properties.value.sort( function(a, b){\r\n                         if (typeof actionRule.sort1 === 'undefined')\r\n                            return 0;\r\n                         var valueA = a[ actionRule.sort1 ];\r\n                         var valueB = b[ actionRule.sort1 ];\r\n                         // console.log(\" -- sort on[\"+ actionRule.sort1+\"] a[\"+JSON.stringify(a)+\"] b[\"+JSON.stringify(b)+\"]\");\r\n                        \r\n                         // console.log(\" -- sort type[\"+( typeof valueA )+\"] valueA[\"+valueA+\"] valueB[\"+valueB+\"]\");\r\n                         if (valueA < valueB)\r\n                            return -1;\r\n                         if (valueA > valueB)\r\n                            return 1;\r\n                        // egals : check sort2\r\n                         var valueA2 = a[ actionRule.sort2 ];\r\n                         var valueB2 = b[ actionRule.sort2 ];\r\n                         if (valueA2 < valueB2)\r\n                            return -1;\r\n                         if (valueA2 > valueB2)\r\n                            return 1;\r\n                        return 0;\r\n                     } );\r\n                }\r\n            }\r\n        }\r\n    }\r\n    this.defaultSort();\r\n    \r\n    // style on header\r\n    this.getStyleHeader= function (header) {\r\n\t    if (typeof header.styleheader !== 'undefined') {\r\n            return header.styleheader ;\r\n        }\r\n\t\treturn \"\";\r\n\t}\r\n\t\r\n    // ActionStyle\r\n    this.getActionStyleCell = function( header, oneRecord )\r\n    {\r\n        // console.log(\"--------------- getActionStyleCell [\"+header.name+\"]\");\r\n        if ($scope.properties.actionsRules !== null)\r\n        {\r\n            for (var i=0;i<$scope.properties.actionsRules.length;i++) {\r\n                var actionRule = $scope.properties.actionsRules[ i ];\r\n                // console.log(\"--------------- getActionStyleCell:actionrule.action=\"+actionRule.action);\r\n                if (actionRule.action === 'styleline') {\r\n                    if (this.actionApply(\"Style\", actionRule, oneRecord))\r\n                    {\r\n                       // console.log(\"--------------- getActionStyleCell:actionRule Styleline TRUE return [\"+actionRule.style+\"]\");\r\n                       return actionRule.style;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n  \r\n\r\n       var attrName = header.name + \"_style\";\r\n        // console.log(\"--------------- getActionStyleCell: by attrName [\"+ attrName + \"]\" );\r\n        if ((typeof oneRecord[ attrName ] !== 'undefined') && ( oneRecord[ attrName ] !== null)) {\r\n            return oneRecord[ attrName ];\r\n        }\r\n        \r\n        // console.log(\"--------------- getActionStyleCell: by styleCol\" );\r\n        if ((typeof header.stylecol != 'undefined') && (header.stylecol !== null)) {\r\n            return header.stylecol;\r\n        }\r\n\r\n     \r\n        return \"\";\r\n    }\r\n    \r\n    // ------------- P1 T getActionReadOnly\r\n    this.getActionReadOnly = function(header, oneRecord )\r\n    {\r\n       if ((typeof oneRecord === 'undefined'))\r\n       {\r\n          // console.log(\"-----------getActionReadOnly:[\"+header.name+\"] :oneRecord undefined  HeaderReadOnly [\"+header.readonly+\"]\");\r\n          return header.readonly; \r\n       }\r\n        var readOnlyAttribut = oneRecord[ header.name+'_readonly' ];\r\n        // console.log(\"----------- getActionReadOnly: [\"+header.name+\"] : ReadOnly [\"+header.readonly+\"] readOnlyAttribut [\"+readOnlyAttribut+\"]\")\r\n        if ((typeof readOnlyAttribut != 'undefined') && (readOnlyAttribut !== null)) {\r\n            return readOnlyAttribut;\r\n        }\r\n       \r\n        // console.log(\"-----------getActionReadOnly:actionRules=[\"+$scope.properties.actionsRules+\"]\");\r\n                \r\n        if ($scope.properties.actionsRules !== null)\r\n        {\r\n            for (var i=0;i<$scope.properties.actionsRules.length;i++) {\r\n                var actionRule = $scope.properties.actionsRules[ i ];\r\n                if (actionRule.action === 'readonlyline') {\r\n                    //console.log(\"--------------- getReadOnly:[\"+header.name+\"] :actionrule.action=\"+actionRule.action);\r\n                    if (this.actionApply( \"ReadOnly\", actionRule, oneRecord))\r\n                    {\r\n                       //console.log(\"--------------- getReadOnly:[\"+header.name+\"]: ActionRule return [true]\");\r\n                       return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        // less priority : the header\r\n         if ((typeof header.readonly != 'undefined') && (header.readonly !== null)) {\r\n            return header.readonly;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    // HideLine\r\n    this.getActionHideLine = function( oneRecord )\r\n    {\r\n\t\t// user manual operation by the user get the lead\r\n\t\tif ( ! (typeof oneRecord[ \"prefixchildrenbearwidget\"] === 'undefined'))\r\n\t\t{\r\n\t\t    var prefixName = oneRecord[ \"prefixchildrenbearwidget\"];\r\n\t\t\t// this is a Children ! So, go up in the list to the parent\r\n\t\t\tvar parentToggle = oneRecord[ \"parenttooglebearwidget\"];\r\n\t\t\t// console.log(\"--------------- getActionHideLine: CHILD record, get the PARENT record : \"+JSON.stringify( parentToggle ) );\r\n\t\t\tif (! (typeof parentToggle === 'undefined'))\r\n\t\t\t\treturn ! parentToggle; \r\n\t\t}\r\n\t\t\r\n\t\t\r\n        //console.log(\"--------------- getActionHideLine: by record \"+JSON.stringify( oneRecord ) );\r\n        if ($scope.properties.actionsRules !== null)\r\n        {\r\n            for (var i=0;i<$scope.properties.actionsRules.length;i++) {\r\n                var actionRule = $scope.properties.actionsRules[ i ];\r\n                // console.log(\"---------------  actionRule.action=\"+actionrule.action);\r\n                if (actionRule.action === 'hideline') {\r\n                    // console.log(\"--------------- getActionHideLine::actionrule.name=\"+actionRule.name);\r\n                    if (this.actionApply( \"HideLine\", actionRule, oneRecord))\r\n                    {\r\n                       // console.log(\"--------------- getActionHideLine: ActionRule return [true]\");\r\n                       return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\t\t\r\n\r\n\t\t\r\n        return false;\r\n    }\r\n    \r\n    // private: check if the rule apply to this record\r\n    this.actionApply= function( source, actionRule, oneRecord) {\r\n         // console.log(\"--------------- getStyle:actionRule Styleline attribut[\"+ actionRule.attribut+\"]\");\r\n        \r\n        var resultAttribut = true;\r\n        var resultVariable = true;\r\n        var valueAttribute = null;\r\n        var valueVariable = null;\r\n        \r\n        if ((typeof  actionRule.attribut != 'undefined') && actionRule.attribut !== null) {\r\n            valueAttribut = oneRecord[ actionRule.attribut ];\r\n            if ((typeof valueAttribut != 'undefined') && (valueAttribut === actionRule.valueattribut ))\r\n                resultAttribut= true;\r\n            else\r\n                resultAttribut=false;\r\n        }\r\n        // by the variable\r\n        if ((typeof  actionRule.variable != 'undefined') &&  actionRule.variable !== null) {\r\n\r\n            valueVariable = $scope.properties.dynamicLists[ actionRule.variable ];\r\n            // console.log(\"--------------- actionApply[\"+source+\"] By Variable[\"+ actionRule.variable +\"] ([\"+actionRule.valuevariable+\"])=[\"+valueVariable+\"] ? \"+resultVariable);\r\n            if ((typeof valueVariable != 'undefined') && (valueVariable === actionRule.valuevariable ))\r\n                resultVariable= true;\r\n            else \r\n                resultVariable = false; \r\n        }\r\n        \r\n        // console.log(\"--------------- actionApply[\"+source+\"] Attribut[\"+ actionRule.attribut+\"] ([\"+actionRule.valueattribut+\"]) ==[\"+valueAttribut+\"] ? \"+resultAttribut + \" Variable[\"+ actionRule.variable+\"] ([\"+actionRule.valuevariable+\"])=[\"+valueVariable+\"] ? \"+resultVariable);\r\n\r\n        if (resultAttribut && resultVariable)\r\n            return true;\r\n        else\r\n            return false;\r\n    };\r\n    \r\n  \r\n\t// ------------------- control\r\n\t\r\n\t\r\n\t// widget SELECT : return the list of option for the header. Return a list like [{key:\"IE\", display:\"Internet\"},{key:\"CHROME\",display:\"Chrome\" },{key:\"FIREFOX\", display:\"Firefox\" }]\r\n\t//   Note at this moment, we don't know which attribut is the DISPLAY and which is the KEY\r\n\tthis.getWSelectListOptionsItem = function( header )\r\n\t{\r\n\t    // console.log(\"getWSelectListOptionsItem: header[\"+header.name+\"] control[\"+header.control+\"]\");\r\n    \t   \r\n\t    if (header.control ==='select')\r\n\t    {\r\n    \t    // console.log('getWSelectListOptionsItem: based on listoption/header='+ JSON.stringify(header));\r\n    \t    if ((typeof header.listoptions != 'undefined') && header.listoptions !== null) {\r\n    \t        // console.log('getWSelectListOptionsItem: return STATIC  listOptions='+ JSON.stringify(header.listoptions));\r\n    \t        return header.listoptions;\r\n    \t    }\r\n    \t    if ((typeof header.listoptionsvariable != 'undefined') &&  header.listoptionsvariable !== null) {\r\n    \t        // console.log(\"getWSelectListOptionsItem: return DYNAMIC listoptionsvariable[\"+ header.listoptionsvariable+\"]\");\r\n    \t        var value = $scope.properties.dynamicLists[ header.listoptionsvariable ];\r\n    \t        // console.log(\"getWSelectListOptionsItem:return DYNAMIC listoptionsvariable[\"+ header.listoptionsvariable+\"] listOptions= \"+ JSON.stringify(value ));\r\n    \t        return value;\r\n    \t    }\r\n            // console.log(\"getWSelectListOptionsItem: return NO LIST\");\r\n    \t    this.errorMessage = this.errorMessage + header.name+\": no option defined in the list use [listoptions] or [listoptionsvariable] properties;\";\r\n\t    }\r\n\t    return null;\r\n\t};\r\n\t\r\n\t// Widget Select : get the select optionItem. Record is \r\n\t// [ browser:\"FR\", pid:334] and header = {name:browser, listoptionkey:\"key\", listoption: [{key:\"GR\", display:\"Germany\"}, {key:\"FR\", display:\"France\"}]}\r\n\t// then the function return the optionItem {key:\"FR\", display:\"France\"}\r\n\tthis.getWSelectGetSelected = function(  header, record ) {\r\n\t     if (header.control ==='select') {\r\n    \t    var listOptionsItem = this.getWSelectListOptionsItem( header );\r\n    \t    // console.log(\"getWSelectGetSelected: ******* name[\"+header.name+\"] listOptions=\"+JSON.stringify(listOptionsItem)+\" record=\"+JSON.stringify( record )+\";\");\r\n    \t    if (listOptionsItem === null)\r\n    \t        return null;\r\n    \t    \r\n    \t    var valueInRecord = record[ header.name ];\r\n    \t    // console.log(\"getWSelectGetSelected:  InitSelect [\"+header.name+\"] : valueInRecord[\"+valueInRecord+\"]\");\r\n\r\n    \t    for (var i=0;i<listOptionsItem.length;i++) { \r\n    \t        var optionRange = listOptionsItem[ i ];\r\n    \t        // console.log( \"getWSelectGetSelected X\"+JSON.stringify(optionRange) );\r\n    \t        var keyRange = this.getWSelectItemToKey( header, optionRange );\r\n        \t    // console.log( \"getWSelectGetSelected KeyRange=[\"+keyRange+\"];\" );\r\n\r\n    \t        if (keyRange === valueInRecord ) {\r\n            \t    // console.log( \"getWSelectGetSelectedReturnRange=[\"+i+\"] : [\"+JSON.stringify(listOptionsItem[ i ])+\"];\" );\r\n    \t            return listOptionsItem[ i ];\r\n    \t        }\r\n    \t    };\r\n    \t    // console.log(\"getWSelectGetSelectedInitSelect [\"+header.name+\"] : ** DefaultValueNotFound ** defaultValue[\"+defaultValue+\"] listOptions=[\"+ JSON.stringify(listOptions )+\"]\");\r\n\t     }\r\n    \t return null;\r\n    \t    \r\n\t}\r\n\t\r\n\t\r\n\tthis.getListSelect = function() { return null };\r\n\t\r\n\t// widget SELECT : return the VALUE of the key of the list. Example : itemOption={ \"country\":\"France\", \"PIB\":\"445\"} / header.listoptionkey=\"country\" => return \"France\"\r\n\tthis.getWSelectItemToKey = function ( header, itemOption ) {\r\n\t        // this.errorMessage = this.errorMessage+\" (getListKey\";\r\n\t        // console.log('getListKey= '+ JSON.stringify( itemOption ));\r\n\t        if (header.listoptionkey===null) {\r\n    \t        // console.log(\" -defaultkey:\"+record.key+\")\");\r\n\t            return record.key;\r\n\t        }\r\n\t        // console.log(\" -indirect(\"+header.listoptionkey+\") : \"+itemOption[ header.listoptionkey ]+\")\");\r\n\r\n\t        return itemOption[ header.listoptionkey ];\r\n\t}\r\n\t\r\n\t// --- pie data\r\n\tthis.getListPieData = function (header ) {\r\n\t    var data = [ 12, 40, 66 ];\r\n\t    // console.log('getListPieData='+JSON.stringify(data) );\r\n\t    return data;\r\n\t}\r\n\tthis.getListPieHeader = function (header ) {\r\n\t    var header = [ \"France\",\"Germany\",\"USA\" ];\r\n\t    // console.log('getListPieHeader='+JSON.stringify(header) );\r\n\t    return header;\r\n\t}\r\n\r\n\t\r\n\t\r\n    // --------------------------------------------------\r\n    // ------------------ Prepare Data\r\n    // --------------------------------------------------\r\n\tthis.prepareData = function() {\r\n\r\n\t    var j;\r\n\t    var oneRecord;\r\n\t    if (typeof $scope.properties.headervalue === 'undefined') {\r\n\t        // console.log( \"prepareData/timeLong: headervalue is undefined\");\r\n\t        return false;\r\n\t    }\r\n\t    // console.log(\"PrepareData : value=\"+$scope.properties.value );\r\n\t    if (($scope.properties.value === null) || (typeof $scope.properties.value === 'undefined')) {\r\n            // console.log(\"~~~~~~~~~~~~~~~~~~ prepareData:NoData\");\r\n            return false;\r\n\t     }\r\n\t    \r\n\t    // console.log(\"~~~~~~~~~~~~~~~~~~PrepareData : value.length=\"+$scope.properties.value.length );\r\n        \r\n\t    for (var i=0; i<$scope.properties.headervalue.length; i++){\r\n\r\n\t        var oneHeader = $scope.properties.headervalue[ i ];\r\n\r\n\t\t\tif (oneHeader.control == 'datelong') {\r\n\r\n\t\t\t\t for (j=0; j<$scope.properties.value.length; j++){\r\n    \t            oneRecord = $scope.properties.value[ j ];\r\n\t\t\t\t\tvar timeRow = oneRecord[ oneHeader.name ];\r\n\t\t\t\t\t// console.log( \"prepareData/timeLong_1: timeRow[\"+timeRow+\"]\");\r\n\t  \t\t\t\t// date is a Time, need to change it in a Date String format\r\n\t\t\t\t\tvar date = new Date(timeRow);\r\n\t\t\t\t\t// when the input are in ReadOnly, the value on '_date' is not working, and the init value must be different\r\n\t\t\t\t\t// than the init value ( ! ). In Read, Write, ng-model and value can be the same, or differrent\r\n\t\t\t\t\t// so, to avoid that, on the datelong field, a method getWSelectDateLongInitValue is called.\r\n\t\t\t\t\toneRecord[ oneHeader.name+'_date' ] = date.toISOString().substring(0, 10);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (oneHeader.control == 'select') {\r\n\t\t\t    // console.log(\"manager headerControlSelect\");\r\n\t\t\t    \r\n\t\t\t\t for (j=0; j<$scope.properties.value.length; j++){\r\n    \t                oneRecord = $scope.properties.value[ j ];\r\n\t\t\t\t\t\tvar selected = this.getWSelectGetSelected( oneHeader, oneRecord );\r\n\t\t\t\t\t\toneRecord[ oneHeader.name+'_select' ] = selected;\r\n\t\t\t\t\t\t// console.log( \"prepareData/select: value[\"+selected+\"]\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} // end for header\r\n\t\treturn true;\r\n\t} // end of prepareData\r\n\t\r\n\t\r\n\t\r\n    // ------------------- debug \r\n\tthis.isShowDebug = function() {\r\n\t    return $scope.properties.showdebug;\r\n\t}\r\n\tthis.getContent = function () {\r\n\t    return $scope.properties.value;\r\n\t}\r\n\t// ------------------- pagination \r\n\tthis.isShowPagination = function() {\r\n\t    return $scope.properties.showPagination !==null && $scope.properties.showPagination.length>0;\r\n\t}\r\n\t\r\n    this.getStepPagination = function() {\r\n        return $scope.properties.showPagination;\r\n    }\r\n\r\n\tthis.getRecordsNumber = function() {\r\n\t    if (($scope.properties.value === null) || (typeof $scope.properties.value === 'undefined')) {\r\n            return 0;\r\n\t    }\r\n\t    return $scope.properties.value.length;\r\n\t}\r\n\t\r\n\tthis.getRecordsFilterNumber = function() {\r\n\t    // console.log(\"************ filterRecordNumber = \"+this.listrecordsfiltered.length);\r\n\t    return this.listrecordsfiltered.length;\r\n\t}\r\n\tthis.getRecordsItemPerPage = function() {\r\n\t    // console.log(\"************ getRecordItemPerPage = \"+this.recorditemsperpage);\r\n\t    if (this.recorditemsperpage == null)\r\n\t      return 100;\r\n\t    return this.recorditemsperpage;\r\n\t}\r\n\t\r\n    this.getRecordsPage = function()\r\n\t{\r\n\t    if (($scope.properties.value === null) || (typeof $scope.properties.value === 'undefined')) {\r\n            return null;\r\n\t    }\r\n\t    // console.log(\"===== getRecordsPage : =\"+ $scope.properties.value);\r\n\t\t// console.log(\"getRecordsPage : =\"+ angular.toJson($scope.properties.value,true));\r\n\t    //console.log(\"getRecordsPage : Orderby:\"+this.orderByField+\" - direction : \"+this.reverseSort);\r\n\t    var listOrdered = [];\r\n\t    for (var i=0; i<$scope.properties.value.length; i++){\r\n\t        var oneRow = $scope.properties.value[ i ];\r\n\t        if (oneRow == null)\r\n\t            $scope.properties.value[ i ] = {};\r\n\t            \r\n\t        listOrdered.push( oneRow );\r\n\t    }\r\n\r\n\t\tlistOrdered = $filter('orderBy')($scope.properties.value, this.orderByField, this.reverseSort);\r\n\t\t$scope.properties.value = listOrdered;\r\n\t\t\r\n\t    //console.log(\"Result After Order=\"+ angular.toJson(listOrdered  , true));\r\n\t    //console.log(\"filter : =\"+ angular.toJson(this.filterrecord , true));\r\n\t    \r\n\t\tthis.listrecordsfiltered = $filter('filter') (listOrdered, this.filterrecord );\r\n\t\t\r\n\t\tif (this.listrecordsfiltered===null)\r\n\t\t  return null;\r\n\r\n\t\t\r\n\t\tvar listChildren = [];\r\n\t\tvar listHeaderControlChilden = {};\r\n\t\tfor (var h=0; h<$scope.properties.headervalue.length; h++){\t\t\r\n\t        var header = $scope.properties.headervalue[ h ];\r\n\t\t\t// we look for all header.parent = \"period\" \r\n\t\t\tif ( ! (typeof header.parent === 'undefined')) {\r\n\t\t\t\tif (listChildren.indexOf(header.parent)=== -1)\r\n\t\t\t\t\tlistChildren.push( header.parent );\r\n\t\t\t}\r\n\t\t\t// is an header pilot a children ? \r\n\t\t\tif ( header.control === 'children') {\r\n\t\t\t\tlistHeaderControlChilden[ header.name ] = header;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\t\r\n\t\t // Ok, this is now the time to include the CHILDREN in the list\r\n\t\tthis.listrecordsFlat = [];\r\n\t    for (var j=0; j<this.listrecordsfiltered.length; j++){\r\n\t\t\tvar oneRow = this.listrecordsfiltered[ j ];\r\n\t\t\tthis.listrecordsFlat.push( oneRow );\r\n\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t// children ?\r\n\t\t\tfor (var k=0;k<listChildren.length;k++) {\r\n\t\t\t   var childName = listChildren[ k ];\r\n\t\t\t   var childRowList = oneRow[ childName ];\r\n\t\t\r\n\t\t\t   if ( ! (typeof childRowList === 'undefined')) {\r\n\t\t\t\tfor (var l=0;l<childRowList.length;l++) {\r\n\t\t\t\t\tvar oneChild = childRowList[ l ];\r\n\t\t\t\t\toneChild[\"prefixchildrenbearwidget\"] = childName;\r\n\r\n\t\t\t\t\t// we link the toogle to the parent value ? If an header.name exist, type=CHILDREN then do it\r\n\t\t\t\t\tvar controlChildren = listHeaderControlChilden[ childName ];\r\n\t\t\t\t\t// console.log(\"==== ControlChildren for childname[\"+childName+\"] ? \"+JSON.stringify( controlChildren ));\r\n\t\t\t\t\t\r\n\t\t\t\t\tif ( ! (typeof controlChildren === 'undefined'))\r\n\t\t            {\r\n\t\t\t\t\t\t// yes, there are one !\r\n\t\t\t\t\t\t// the value must exist in the Parent !\r\n\t\t\t\t\t\tif (typeof oneRow[ childName+\"_bearwidget\"] === 'undefined')\r\n\t\t\t\t\t\t\toneRow[ childName+\"_bearwidget\"]=false;\r\n\t\t\t\t\t\toneChild[\"parenttooglebearwidget\"] = oneRow[ childName+\"_bearwidget\"];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.listrecordsFlat.push( oneChild );\r\n\t\t\t\t}\r\n\t\t\t   }\r\n\t\t\t   \r\n\t\t\t}\r\n\t\t}\r\n\t\t  \r\n\t\t// console.log(' listrecordsFlat='+angular.toJson(this.listrecordsFlat));\r\n\t    if (this.isShowPagination() )\r\n\t    {\r\n\t\t    var begin = ((this.recordpagenumber - 1) * this.recorditemsperpage);\r\n\t\t    var end = begin + this.recorditemsperpage;\r\n\t        // console.log(\"Result After Filter begin/end=\"+begin+\"/\"+end+\":\"+ angular.toJson(this.listFlat , true));\r\n    \t\treturn this.listrecordsFlat.slice(begin, end);\r\n\t    }\r\n\t\treturn this.listrecordsFlat;\r\n\t    \r\n\t}\r\n\t\r\n   \r\n\t//-------------------------- getter\r\n\tthis.getHeader = function( oneRecord ) {\r\n\t    \r\n\t\tvar prefixRecord=\"\";\r\n        // alert(\"getheader oneRecord =\"+  JSON.stringify( oneRecord ));\r\n\t\t\r\n\t\t// this is the Header itself\r\n\t\tif (typeof oneRecord !== 'undefined') {\r\n\t\t  // this is the description of one line. If the prefixchildrenbearwidget exist, this is a Child description.\r\n\t      prefixRecord = oneRecord[ \"prefixchildrenbearwidget\" ];\r\n\t\t  \r\n\t\t\r\n\t      if (typeof prefixRecord =='undefined')\r\n\t        prefixRecord=\"\";\r\n\t\t}\r\n\t\t\r\n\t\tvar headerFilter = [];\r\n\t\t// return all header where there are no . in the name\r\n\t\t for (var i=0; i<$scope.properties.headervalue.length; i++){\r\n\t        var header = $scope.properties.headervalue[ i ];\r\n\t\t\tvar prefixHeader = \"\";\r\n\t\t\tif ( ! (typeof header.parent === 'undefined'))\r\n\t\t\t\tprefixHeader = header.parent;\r\n\t\t\t\t\r\n\t\t\tif (prefixHeader === prefixRecord ) {\r\n\t\t\t\theaderFilter.push( header );\r\n\t\t\t}\r\n\t    }\r\n\t\treturn headerFilter;\r\n\t}\r\n\tthis.getCheckRule = function() {\r\n\t    return $scope.properties.checkrules;\r\n\t}\r\n\tthis.getOrderByField = function() {\r\n\t    return this.orderByField;\r\n\t}\r\n\t\r\n\tthis.isReverseSort = function() {\r\n\t    return this.reverseSort;\r\n\t}\r\n\t\r\n\tthis.getTableCss = function () {\r\n\t    return $scope.properties.tablecssclass;\r\n\t}\r\n\t\r\n\tthis.getStyleCss = function () {\r\n\t    return $scope.properties.tablecssstyle;\r\n\t}\r\n\t// --  setter\r\n\tthis.setOrder= function( paramorderfield, paramreversesort)\r\n\t{\t\r\n\t\tthis.orderByField = paramorderfield;\r\n\t\tthis.reverseSort = paramreversesort;\r\n\t\t// console.log(\"SET Order : [\"+this.orderByField+\"] order=\"+this.reverseSort);\t\t\r\n\t}\r\n\t\r\n\t\r\n    //------------------- init\r\n    ctrl.diseablePrepareData =false;\r\n    \r\n    $scope.$watch('properties.value', function(newValue, oldValue) {\r\n        if (! ctrl.diseablePrepareData)\r\n        {\r\n            var prepareDataDone = ctrl.prepareData();\r\n            ctrl.checkRules();    \r\n            ctrl.diseablePrepareData =prepareDataDone;\r\n        }\r\n    }, true);\r\n    \r\n\t\r\n\t\r\n\r\n  \r\n}","description":"Display a table, with rich control. Via the header, different mechanism can be controlled:\n* sort the column, yes or no\n* filter the column, yes or no\n* type of the control for the record : input, text, select, link, button","custom":true,"properties":[{"label":"Value","name":"value","type":"text","defaultValue":"This is the initial value","bond":"expression"},{"label":"Table CSS Classes","name":"tablecssclass","type":"text","bond":"expression"},{"label":"Table CSS Style","name":"tablecssstyle","type":"text","bond":"expression"},{"label":"Header List","name":"headervalue","type":"collection","defaultValue":["[ {\"title\":\"Colum  name\"","\"filter\": yes","\"order\":yes","\"control\":\"input\" }","{\"title\":\"Colum  name\"","\"filter\": yes","\"order\":yes","\"control\":\"select\" }","{\"title\":\"Colum  name\"","\"filter\": yes","\"order\":yes","\"control\":\"link\" }","{\"title\":\"Colum  name\"","\"filter\": yes","\"order\":yes","\"control\":\"button\" } ]"],"bond":"expression"},{"label":"Pagination","name":"showPagination","type":"boolean","defaultValue":true,"bond":"expression"},{"label":"Dynamic List","name":"dynamicLists","type":"text","defaultValue":"{ \"listscreen\" : [ {\"key\":\"TA\", \"name\":\"Tablette\"} , {\"key\":\"PC\", \"name\":\"Computer\"} ] }","bond":"expression"},{"label":"Show Debug","name":"showdebug","type":"boolean","defaultValue":true,"bond":"expression"},{"label":"Label","name":"Label","type":"text","bond":"expression"},{"label":"Checks Rules","name":"checkrules","type":"text","bond":"expression"},{"label":"Actions Rules","name":"actionsRules","type":"text","bond":"expression"}],"assets":[{"id":"83310789-eacf-4a21-b1f7-b59a37727b1b","name":"angular-chart-0.8.1.css","type":"css","order":7,"external":false},{"id":"92d57f88-0fe7-4e8c-9c9d-ffd639fb2753","name":"Chart-1.0.2.min.js","type":"js","order":8,"external":false},{"id":"c911f578-3265-4ee1-b80c-bed746027dec","name":"angular-filter.min.js","type":"js","order":1,"external":false},{"id":"f157161e-7880-4cb4-a450-612e9303e7f1","name":"angular-chart-0.8.1.min.js","type":"js","order":9,"external":false},{"id":"2f3c8dbb-f71f-45db-9bfe-c28682434348","name":"numeral.min.js","type":"js","order":2,"external":false},{"id":"14474f4c-0a80-483b-a257-1d8782f3a482","name":"richetable.css","type":"css","order":6,"external":false}],"requiredModules":["ui.bootstrap"],"type":"widget"}